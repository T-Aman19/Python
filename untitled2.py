# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Z6RgkEecQGmtRA6J4BaoKQaED-yBfs3i
"""

'''why learn python?
1. Object oreiented
2. Easy syntax
3, Big community, so u can get solution to almost all of your doubts
4. Used in data science and ML models

Disadvantages of python:
Slower in execution in comparision with other languages such as C++ and C.'''

'''Data types in python :
int, string, float, list, dictionary, set, tuple.
Int- valid for any integer
Float- Decimal values
String- Anything between " " or ' '.'''
#Lines starting with # are comments in python
'''This 
is 
a multiline comment. Infact, python does not have multiline comment, this is a multiline string, but unless printed or used anywhere, it acts as multilline comments.


Python is case-sensitive
'''

#List
#indexing in list starts from 0
#to declare a list we can use list(), it will create an empty list or we can also initialise the variable with [].
#Example:
a=list()
print("a=", a)
#OR
b=[]
print("b=", b)

#List methods: Inbuilt operations which we can peform on lists
#1.Append: Add a value at the end of the list
a.append(2)
print("a after appending 2=", a)
#2. clear:	Removes all the elements from the list
a.clear()
print("a after clearing=", a)
#To show other methods, first lets add a few values to our list
b.append(1)
b.append(2)
b.append(5)
b.append(0)
print("updated b=", b)
#count: Returns the number of elements with the specified value
print(b.count(2))
#and if the value doesn't exist, it returns 0
print(b.count(10))
b.append(2)
print(b)
#index: returns the position at the first occurrence of the specified value.
print(b.index(2))
#b contains 2 at position 1 and 4, but index returns 1
#insert: Adds an element at the specified position
b.insert(0,10) # Inserts 10 at index 0
print(b)
#remove: Removes the first item with the specified value
b.remove(2)#Removes 2 from its first occurence
print(b)
#pop: Removes the element at the specified position
b.pop(2)#Deletes the element at 2 pos
print(b)
#revrse: Reverses the order of the list
b.reverse()
print(b)
#sort: Sorts the list in ascending order
b.sort()
print(b)
# To sort in descending order, set reverse to True
b.sort(reverse=True)
print(b)

#Dictionary
#contains key-value pairs which are indexed and changeable
#To declare a dictionary, we can use dict() method or initialise the variable with {}
d= dict()
print(d)
#OR
e={}
print(e)

#Values can be added manually as:
d= {'First': 'John', 'Second' : 'Jack', 'Third':'Charlie'}
print(d)
#Dictionary methods
#get: Returns the value of a specified key
print(d.get('First'))
#items: Returns a list containing a tuple for each key value pair
d.items()
#keys: Returns a list containing the dictionary's keys
d.keys()
#pop: Removes the element with the specified key
d.pop('First')
print("After popping up First:",d)
#update: Updates the dictionary with the specified key-value pairs
d.update({'Fourth': 'Ani'})
print("updated d=", d)
#values: Returns a list of all the values in the dictionary
print(d.values())
#setdefault: returns the value of the item with the specified key. If the key does not exist, insert the key, with the specified value
print(d.setdefault('Fifth', 'Joey'))#setdefault(key, value_to_insert(used only if key does no exist) )
#Prints Joey as Fifth does not exist in d

